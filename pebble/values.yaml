## Values to render the Helm templates.
fullnameOverride: ""

pebble:
  image:
    ## repository ref: https://hub.docker.com/r/letsencrypt/pebble
    repository: ghcr.io/letsencrypt/pebble
    tag: "" # default is the chart's appVersion, this is an override

  # Image for creating certificates
  openssl:
    repository: docker.io/alpine/openssl
    tag: "3.3.2"

  ## config ref: https://github.com/letsencrypt/pebble/blob/52b92744eaad895ac25b19dae429c0bdd134b764/cmd/pebble/main.go#L17
  config:
    pebble:
      listenAddress: :8443
      managementListenAddress: :8444
      httpPort: 80 # this is the port where outgoing HTTP-01 challenges go
      tlsPort: 443 # this is the port where outgoing TLS-ALPN-01 challenges go
      certificate: /etc/pebble/temp-tls-leaf/cert.pem
      privateKey: /etc/pebble/temp-tls-leaf/key.pem
      ocspResponderURL: ""
      externalAccountBindingRequired: false
      externalAccountMACKeys: {}

  env:
    ## ref: https://github.com/letsencrypt/pebble#testing-at-full-speed
    - name: PEBBLE_VA_NOSLEEP
      value: "1"
    ## ref: https://github.com/letsencrypt/pebble#invalid-anti-replay-nonce-errors
    - name: PEBBLE_WFE_NONCEREJECT
      value: "0"
    ## ref: https://github.com/letsencrypt/pebble#authorization-reuse
    - name: PEBBLE_AUTHZREUSE
      value: "100"
    # ## ref: https://github.com/letsencrypt/pebble#skipping-validation
    # - name: PEBBLE_VA_ALWAYS_VALID
    #   value: "0"

  nodePort: 32443
  mgmtNodePort: 32444

  ## merge lets you merge in annotations, tolerations, etc, into respective
  ## resource.
  merge:
    deployment: {}
    service: {}
    configmap: {}

## coredns is an optional DNS server that can for example point anything.test
## to your-acme-client.your-namespace.svc.cluster.local.
coredns:
  enabled: true

  ## image ref: https://hub.docker.com/r/coredns/coredns/tags
  image:
    repository: coredns/coredns
    tag: "1.11.3"

  ## corefileSegment allow you to inject logic into CoreDNS's configuration
  ## file, called a Corefile. The example below will resolve all lookups of
  ## the test domain to whatever the Kubernetes clusters normal DNS server
  ## resolves mysvc.<pebbles-namespace>.svc.cluster.local to, which could be
  ## where you run your ACME client.
  ##
  ## ref: https://coredns.io/manual/toc/#configuration
  ##
  corefileSegment: ""
  # corefileSegment: |-
  #   template ANY ANY test {
  #     answer "{{ .Name }} 60 IN CNAME mysvc.{$PEBBLE_NAMESPACE}.svc.cluster.local"
  #   }

  nodePort: 32053

  ## merge lets you merge in annotations, tolerations, etc, into respective
  ## resource.
  merge:
    deployment: {}
    service: {}
    configmap: {}
